name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Rebuild and publish nightly to catch any base image updates that might have happened
  schedule:
    - cron:  '* 0 * * *'

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: flexget

jobs:
  flexget_meta:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.full }}
      short_version: ${{ steps.version.outputs.short }}
      major_version: ${{ steps.version.outputs.major }}

    steps:
      - id: version
        run: |
          FLEXGET_VERSION=$(curl -s https://pypi.org/pypi/FlexGet/json | docker run -i stedolan/jq -j ".info.version")
          FLEXGET_SHORT_VERSION=${FLEXGET_VERSION%.*}
          FLEXGET_MAJOR_VERSION=${FLEXGET_SHORT_VERSION%.*}

          echo "::set-output name=full::$FLEXGET_VERSION"
          echo "::set-output name=short::$FLEXGET_SHORT_VERSION"
          echo "::set-output name=major::$FLEXGET_MAJOR_VERSION"

  test:
    runs-on: ubuntu-latest

    needs: flexget_meta

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker build \
            --build-arg VCS_REF=${{ github.sha }} \
            --build-arg BUILD_DATE=$(date -u +”%Y-%m-%dT%H:%M:%SZ”) \
            --build-arg FLEXGET_VERSION=${{ needs.flexget_meta.outputs.version }} \
            --file Dockerfile \
            .


  github-registry:
    needs: [flexget_meta, test]

    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build \
            --build-arg VCS_REF=${{ github.sha }} \
            --build-arg BUILD_DATE=$(date -u +”%Y-%m-%dT%H:%M:%SZ”) \
            --build-arg FLEXGET_VERSION=${{ needs.flexget_meta.outputs.version }} \
            --file Dockerfile \
            --tag $IMAGE_NAME \
            .

      - name: Log into github registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image to github registry
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:${{ needs.flexget_meta.outputs.version }}
          docker push $IMAGE_ID:${{ needs.flexget_meta.outputs.version }}

          docker tag $IMAGE_NAME $IMAGE_ID:${{ needs.flexget_meta.outputs.short_version }}
          docker push $IMAGE_ID:${{ needs.flexget_meta.outputs.short_version }}

          docker tag $IMAGE_NAME $IMAGE_ID:${{ needs.flexget_meta.outputs.major_version }}
          docker push $IMAGE_ID:${{ needs.flexget_meta.outputs.major_version }}


  dockerhub-registry:
    needs: [flexget_meta, test]

    runs-on: ubuntu-latest
    if: ${{ true }} #github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Date
        id: date
        run: |
          echo "::set-output name=date::$(date -u +”%Y-%m-%dT%H:%M:%SZ”)"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=raw,value={{ needs.flexget_meta.outputs.version }}
            type=raw,value={{ needs.flexget_meta.outputs.short_version }}
            type=raw,value={{ needs.flexget_meta.outputs.major_version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ false }} #${{ github.event_name != 'pull_request' }}
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ steps.date.outputs.date }}
            FLEXGET_VERSION=${{ needs.flexget_meta.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
